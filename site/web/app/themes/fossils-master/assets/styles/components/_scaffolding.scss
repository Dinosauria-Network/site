//
// Scaffolding
// --------------------------------------------------

body {
  background-color: $body-bg;
}
.site {
	position: relative;
	overflow: hidden;
	width: 100%;
}
.inner-wrap {
	position: relative;
	width: 100%;
}
.blog .content .hentry, .archive .content .hentry {
	@include breakpoint(tablet) {
        width: 50%;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
        box-sizing: border-box;
        padding: 0.857143em;
        margin-top: 0px;
        border: 1px solid $table-border-color;
	}
}
.no-js {
	.blog .content .hentry, .archive .content .hentry {
		&.even {
			float: right;
		}
		&.odd {
			float: left;
		}
	}
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}